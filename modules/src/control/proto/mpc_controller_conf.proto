syntax = "proto2";

package EDrive.control;

import "control/proto/gain_scheduler_conf.proto";
import "control/proto/calibration_table.proto";

// simple optimal steer control param
message MPCControllerConf {
  optional double ts = 1;            // sample time (dt) 0.01 now, configurable
  optional double cf = 2;
  optional double cr = 3;            // N/rad
  optional int32 mass_fl = 4;
  optional int32 mass_fr = 5;
  optional int32 mass_rl = 6;
  optional int32 mass_rr = 7;
  optional double eps = 8;          // converge threshold
  repeated double matrix_q = 9;     // matrix_q size = 6
  repeated double matrix_r = 10;    // matrix_r size = 2
  optional int32 cutoff_freq = 11;   // cutoff frequency
  optional int32 mean_filter_window_size = 12;  // window size of mean filter
  // for a normal car, it should be in range[16, 18]
  optional int32 max_iteration = 13;  // maximum iteration for lqr solve
  optional double max_lateral_acceleration = 14;  // limit aggressive steering
  optional double standstill_acceleration = 15;
  optional double throttle_minimum_action = 16;
  optional double brake_minimum_action = 17;
  optional EDrive.control.GainScheduler lat_err_gain_scheduler = 18;
  optional EDrive.control.GainScheduler heading_err_gain_scheduler = 19;
  optional EDrive.control.GainScheduler steer_weight_gain_scheduler = 20;
  optional EDrive.control.GainScheduler feedforwardterm_gain_scheduler = 21;
  optional calibrationtable.ControlCalibrationTable calibration_table = 22;
  optional bool enable_mpc_feedforward_compensation = 23 [default = false];
  optional double unconstrained_control_diff_limit = 24;
}
